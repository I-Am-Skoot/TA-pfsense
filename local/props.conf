[pfsense]
TRANSFORMS-pfsense_sourcetyper = pfsense_sourcetyper
SHOULD_LINEMERGE = false
#SEDCMD-event_cleaner = s/^(\w{3}\s+\d{1,2}\s\d{2}:\d{2}:\d{2}\s)+\S+\.\S+\s+/\1/g
#SEDCMD-event_cleaner2 = s/^(\w{3}\s+\d{1,2}\s\d{2}:\d{2}:\d{2}\s)+(\w{3}\s+\d{1,2}\s\d{2}:\d{2}:\d{2}\s)+/\1/g
#SEDCMD-event_cleaner3 = s/^\w{3}\s+\d{1,2}\s\d{2}:\d{2}:\d{2}\s\S+\s(\S+\s)/\1/g

[pfsense:filterlog]
KV_MODE = false

EXTRACT-ipv4_icmp_request = filterlog\s+\d+\s+\-\s+\-\s+(?P<rule>[^,])*,(?P<sub_rule>[^,]*),(?P<anchor>[^,]*),(?P<tracker_id>[^,]*),(?P<dest_int>[^,]*),(?P<reason>[^,]*),(?P<vendor_action>[^,]*),(?P<vendor_direction>[^,]*),(?P<ip_version>4),(?P<tos>[^,]*),(?P<ecn>[^,]*),(?P<ttl>[^,]*),(?P<id>[^,]*),(?P<offset>[^,]*),(?P<flags>[^,]*),(?P<transport_id>[^,]*),(?P<vendor_transport>icmp),(?P<bytes>[^,]*),(?P<src_ip>[^,]*),(?P<dest_ip>[^,]*),(?P<icmp_code>request),(?P<echo_id>\d+),(?P<echo_sequence>\d+)
EXTRACT-ipv4_redirect_icmp_unreach_timeeeceed = filterlog\s+(?P<rule>[^,]*),(?P<sub_rule>[^,]*),(?P<anchor>[^,]*),(?P<tracker_id>[^,]*),(?P<dest_int>[^,]*),(?P<reason>[^,]*),(?P<vendor_action>[^,]*),(?P<vendor_direction>[^,]*),(?P<ip_version>4),(?P<tos>[^,]*),(?P<ecn>[^,]*),(?P<ttl>[^,]*),(?P<id>[^,]*),(?P<offset>[^,]*),(?P<flags>[^,]*),(?P<transport_id>[^,]*),(?P<vendor_transport>icmp),(?P<bytes>[^,]*),(?P<src_ip>[^,]*),(?P<dest_ip>[^,]*),(?P<icmp_code>redirect|unreach|timexceed),(?P<icmp_text>[^$]+)$
EXTRACT-ipv4_tcp = filterlog\[\d*\]:\s(?<rule>[^,])*,(?<sub_rule>[^,]*),(?<anchor>[^,]*),(?<tracker_id>[^,]*),(?<dest_int>[^,]*),(?<reason>[^,]*),(?<vendor_action>[^,]*),(?<vendor_direction>[^,]*),(?<ip_version>4),(?<tos>[^,]*),(?<ecn>[^,]*),(?<ttl>[^,]*),(?<id>[^,]*),(?<offset>[^,]*),(?<flags>[^,]*),(?<transport_id>[^,]*),(?<vendor_transport>tcp),(?<bytes>[^,]*),(?<src_ip>[^,]*),(?<dest_ip>[^,]*),(?<src_port>[^,]*),(?<dest_port>[^,]*),(?<payload_bytes>[^,]*),(?<vendor_tcp_flags>[^,]*),(?<sequence_number>[^,]*),(?<ack>[^,]*),(?<window>[^,]*),(?<urg>[^,]*),(?<options>[^$]*)$
EXTRACT-ipv4_udp = filterlog\[\d*\]:\s(?<rule>[^,]*),(?<sub_rule>[^,]*),(?<anchor>[^,]*),(?<tracker_id>[^,]*),(?<dest_int>[^,]*),(?<reason>[^,]*),(?<vendor_action>[^,]*),(?<vendor_direction>[^,]*),(?<ip_version>4),(?<tos>[^,]*),(?<ecn>[^,]*),(?<ttl>[^,]*),(?<id>[^,]*),(?<offset>[^,]*),(?<flags>[^,]*),(?<transport_id>[^,]*),(?<vendor_transport>udp),(?<bytes>[^,]*),(?<src_ip>[^,]*),(?<dest_ip>[^,]*),(?<src_port>[^,]*),(?<dest_port>[^,]*),(?<payload_bytes>[^,]*)
#EXTRACT-ipv4_icmp_request = filterlog\[\d*\]:\s(?<rule>[^,])*,(?<sub_rule>[^,]*),(?<anchor>[^,]*),(?<tracker_id>[^,]*),(?<dest_int>[^,]*),(?<reason>[^,]*),(?<vendor_action>[^,]*),(?<vendor_direction>[^,]*),(?<ip_version>4),(?<tos>[^,]*),(?<ecn>[^,]*),(?<ttl>[^,]*),(?<id>[^,]*),(?<offset>[^,]*),(?<flags>[^,]*),(?<transport_id>[^,]*),(?<vendor_transport>icmp),(?<bytes>[^,]*),(?<src_ip>[^,]*),(?<dest_ip>[^,]*),(?<icmp_code>request),(?<echo_id>\d+),(?<echo_sequence>\d+)
EXTRACT-ipv4_icmp_unreachport = filterlog\[\d*\]:\s(?<rule>[^,]*),(?<sub_rule>[^,]*),(?<anchor>[^,]*),(?<tracker_id>[^,]*),(?<dest_int>[^,]*),(?<reason>[^,]*),(?<vendor_action>[^,]*),(?<vendor_direction>[^,]*),(?<ip_version>4),(?<tos>[^,]*),(?<ecn>[^,]*),(?<ttl>[^,]*),(?<id>[^,]*),(?<offset>[^,]*),(?<flags>[^,]*),(?<transport_id>[^,]*),(?<vendor_transport>icmp),(?<bytes>[^,]*),(?<src_ip>[^,]*),(?<dest_ip>[^,]*),(?<icmp_code>unreachport),(?<icmp_dest_ip>[^,]*),(?<unreachable_protocol_id>[^,]*),(?<unreachable_port_data>[^$]+)$
#EXTRACT-ipv4_redirect_icmp_unreach_timeexceed = filterlog\[\d*\]:\s(?<rule>[^,]*),(?<sub_rule>[^,]*),(?<anchor>[^,]*),(?<tracker_id>[^,]*),(?<dest_int>[^,]*),(?<reason>[^,]*),(?<vendor_action>[^,]*),(?<vendor_direction>[^,]*),(?<ip_version>4),(?<tos>[^,]*),(?<ecn>[^,]*),(?<ttl>[^,]*),(?<id>[^,]*),(?<offset>[^,]*),(?<flags>[^,]*),(?<transport_id>[^,]*),(?<vendor_transport>icmp),(?<bytes>[^,]*),(?<src_ip>[^,]*),(?<dest_ip>[^,]*),(?<icmp_code>redirect|unreach|timexceed),(?<icmp_text>[^$]+)$
EXTRACT-ipv4_carp = filterlog\[\d*\]:\s(?<rule>[^,])*,(?<sub_rule>[^,]*),(?<anchor>[^,]*),(?<tracker_id>[^,]*),(?<dest_int>[^,]*),(?<reason>[^,]*),(?<vendor_action>[^,]*),(?<vendor_direction>[^,]*),(?<ip_version>4),(?<tos>[^,]*),(?<ecn>[^,]*),(?<ttl>[^,]*),(?<id>[^,]*),(?<offset>[^,]*),(?<flags>[^,]*),(?<transport_id>[^,]*),(?<vendor_transport>carp),(?<bytes>[^,]*),(?<src_ip>[^,]*),(?<dest_ip>[^,]*),(?<carp_type>[^,]*),(?<carp_ttl>[^,]*),(?<vhid>[^,]*),(?<version>[^,]*),(?<advbase>[^,]*),(?<advskew>[^,]*)
EXTRACT-ipv4_igmp = filterlog\[\d*\]:\s(?<rule>[^,])*,(?<sub_rule>[^,]*),(?<anchor>[^,]*),(?<tracker_id>[^,]*),(?<dest_int>[^,]*),(?<reason>[^,]*),(?<vendor_action>[^,]*),(?<vendor_direction>[^,]*),(?<ip_version>4),(?<tos>[^,]*),(?<ecn>[^,]*),(?<ttl>[^,]*),(?<id>[^,]*),(?<offset>[^,]*),(?<flags>[^,]*),(?<transport_id>[^,]*),(?<vendor_transport>igmp),(?<bytes>[^,]*),(?<src_ip>[^,]*),(?<dest_ip>[^,]*),datalength=(?<data_length>\d+)
EXTRACT-ipv4_pim = filterlog:\s(?<rule>[^,])*,(?<sub_rule>[^,]*),(?<anchor>[^,]*),(?<tracker_id>[^,]*),(?<dest_int>[^,]*),(?<reason>[^,]*),(?<vendor_action>[^,]*),(?<vendor_direction>[^,]*),(?<ip_version>4),(?<tos>[^,]*),(?<ecn>[^,]*),(?<ttl>[^,]*),(?<id>[^,]*),(?<offset>[^,]*),(?<flags>[^,]*),(?<transport_id>[^,]*),(?<vendor_transport>pim),(?<bytes>[^,]*),(?<src_ip>[^,]*),(?<dest_ip>[^,]*),datalength=(?<data_length>\d+)
EXTRACT-ipv6_icmp = filterlog\[\d*\]:\s(?<rule>[^,]*),(?<sub_rule>[^,]*),(?<anchor>[^,]*),(?<tracker_id>[^,]*),(?<dest_int>[^,]*),(?<reason>[^,]*),(?<vendor_action>[^,]*),(?<vendor_direction>[^,]*),(?<ip_version>6),(?<class>[^,]*),(?<flow_label>[^,]*),(?<hop_limit>[^,]*),(?<vendor_transport>ICMPv6),(?<transport_id>[^,]*),(?<bytes>[^,]*),(?<src_ip>[^,]*),(?<dest_ip>[^,]*),
EXTRACT-ipv6_tcp = filterlog\[\d*\]:\s(?<rule>[^,]*),(?<sub_rule>[^,]*),(?<anchor>[^,]*),(?<tracker_id>[^,]*),(?<dest_int>[^,]*),(?<reason>[^,]*),(?<vendor_action>[^,]*),(?<vendor_direction>[^,]*),(?<ip_version>6),(?<class>[^,]*),(?<flow_label>[^,]*),(?<hop_limit>[^,]*),(?<vendor_transport>TCP),(?<transport_id>[^,]*),(?<bytes>[^,]*),(?<src_ip>[^,]*),(?<dest_ip>[^,]*),(?<src_port>[^,]*),(?<dest_port>[^,]*),(?<payload_bytes>[^,]*),(?<vendor_tcp_flags>[^,]*),(?<sequence_number>[^,]*),(?<ack>[^,]*),(?<window>[^,]*),(?<urg>[^,]*),(?<options>[^$]*)$
EXTRACT-ipv6_udp = filterlog\[\d*\]:\s(?<rule>[^,]*),(?<sub_rule>[^,]*),(?<anchor>[^,]*),(?<tracker_id>[^,]*),(?<dest_int>[^,]*),(?<reason>[^,]*),(?<vendor_action>[^,]*),(?<vendor_direction>[^,]*),(?<ip_version>6),(?<class>[^,]*),(?<flow_label>[^,]*),(?<hop_limit>[^,]*),(?<vendor_transport>UDP),(?<transport_id>[^,]*),(?<bytes>[^,]*),(?<src_ip>[^,]*),(?<dest_ip>[^,]*),(?<src_port>[^,]*),(?<dest_port>[^,]*),(?<payload_bytes>[^,]*)
EXTRACT-ipv6-hbh = filterlog\[\d*\]:\s(?<rule>[^,]*),(?<sub_rule>[^,]*),(?<anchor>[^,]*),(?<tracker_id>[^,]*),(?<dest_int>[^,]*),(?<reason>[^,]*),(?<vendor_action>[^,]*),(?<vendor_direction>[^,]*),(?<ip_version>6),(?<class>[^,]*),(?<flow_label>[^,]*),(?<hop_limit>[^,]*),Options,\d+,\d+,(?<src_ip>[^,]*),(?<dest_ip>[^,]*),(?<extension_header>\w+),
REPORT-vendor_tcp_flag = pfsense_vendor_tcp_flag
EVAL-app = "pfsense:filterlog"
EVAL-bytes_in = if(vendor_direction == "in", bytes,null)
EVAL-bytes_out = if(vendor_direction == "out", bytes,null)
EVAL-direction = case(vendor_direction == "in", "inbound", vendor_direction == "out", "outbound")
FIELDALIAS-pfsense_filterlog_src = src_ip AS src
FIELDALIAS-pfsense_filterlog_dest = dest_ip AS dest
LOOKUP-filterlog_tcpflags = pfsense_filter_tcpflags vendor_tcp_flag OUTPUTNEW tcp_flag
LOOKUP-filterlog_transport = pfsense_filter_transport vendor_transport OUTPUTNEW transport
LOOKUP-filterlog_action = pfsense_filter_action vendor_action OUTPUTNEW action

[pfsense:dhcpd]
EXTRACT-ipv4_dhcp = (?<vendor_action>DHCPACK|DHCPREQUEST) (?:on|for) (?<dest_ip>\S+) (?:from|to) (?<src_mac>\S+)(\s\((?<device_name>.*)\))? via (?<src_interface>\S+)
EXTRACT-ipv6_dhcp_rebind = dhcpd: Rebind message from (?P<src_mac>\S+) port (?P<src_port>\d+), transaction ID (?P<transaction_id>\S+)
EXTRACT-ipv6_dhcp_reply = dhcpd: Sending Reply to (?P<src_mac>\S+) port (?P<src_port>\S+)
EVAL-app = "pfsense:dhcpd"

[pfsense:openvpn]
EXTRACT-process_id = \w{3}\s+\d{1,2}\s\d{2}:\d{2}:\d{2}\s+\w+(\[(?<process_id>\d+)\])?:
EXTRACT-authentication = openvpn \d+ - - user '(?P<user>\S+)' (?P<action>could not authenticate|authenticated)
EXTRACT-user,src_ip,src_port = openvpn \d+ - - (?P<user>\S+)\/(?P<src_ip>\S+):(?P<src_port>\d+)
EXTRACT-src_ip,src_port = openvpn \d+ - - (?P<src_ip>\d+\.\d+\.\d+\.\d+):(?P<src_port>\d+)
EXTRACT-src_ip,src_port,user,reason = openvpn \d+ - - .*(?P<src_ip>[^:]+):(?P<src_port>\d+).*\[(?P<user>\S+)\]\s+(?P<reason>Peer Connection Initiated|Inactivity timeout)
EVAL-app = "pfsense:openvpn"
LOOKUP-openvpn_action = pfsense_openvpn_action vendor_action OUTPUTNEW action
EXTRACT-route = route (?P<network>\d+\.\d+\.\d+\.\d+) (?P<subnet_mask>\d+\.\d+\.\d+\.\d+)
EXTRACT-cipher = cipher (?P<cipher>\S+)'
EXTRACT-gateway = route-gateway (?P<gateway>\S+),
EXTRACT-dhcp-options = dhcp-option DOMAIN (?P<domain>\S+),dhcp-option DNS (?P<dns>\S+),
EXTRACT-ifconfig = ifconfig (?P<dest_ip>\S+) (?P<subnet_mask>\S+),
EXTRACT-status = status=(?P<status>\d+)
EXTRACT-interval = ping (?P<interval>\d+),\S+ (?P<timeout>\d+)
EVAL-vendor_product = "netgate pfsense"
EVAL-user = coalesce(user,src_user,"unknown")
EXTRACT-management action = openvpn \d+ - - MANAGEMENT: (?P<action>Client connected|Client disconnected)
EVAL-action = coalesce(action,vendor_action,"unknown")
EVAL-src_ip = coalesce(src_ip,src,"unknown")

[pfsense:nginx]
EXTRACT-pf_nginx = nginx: (?P<dest>[^ ]+) \-(?P<user>[^\s"]*) \- \[(?P<request_time>[^\]]+)[^"\n]*"(?P<http_method>\w+)\s+(?P<url>[^\s"]+)[^ \n]* (?P<http_proto>[^"]+)[^ \n]* (?P<status>[^ ]+)\s+(?P<bytes_out>\d+)[^"\n]*"(?P<http_referrer>[^"]+)(?:[^"\n]*"){2}(?P<http_user_agent>[^"]+)
EXTRACT-pf_ngingx1 = nginx\s+\-\s+\-\s+\-\s+(?P<src_host>\d+\.\d+\.\d+\.\d+)\s+\-\s+\-\s+\[(?P<request_time>.*)\]\s+\"(?P<http_method>\S+)\s+(?P<url>\S+)\s+(?P<http_proto>.*)\"\s+(?P<status>\d+)\s+(?P<bytes_out>\d+)\s+\"(?P<http_referrer>\S+)\"\s+\"(?P<http_user_agent>.*)\".*
EVAL-app = "pfsense:nginx"

[pfsense:unbound]
EXTRACT-queries = info: resolving\s+(?P<query>\S+)\.\s+(?P<query_type>\S+)\s+.*
EXTRACT-queries1 = info: validator operate: query (?P<query>\S+)\.\s+(?P<query_type>\S+)\s+.*
EXTRACT-response = info: response for (?P<answer>\S+)\s+(?P<record_type>\S+).*
EXTRACT-reply = info: reply from\s+\S+\s+(?P<src>\d+\.\d+\.\d+\.\d+)#(?P<src_port>\S+)
EVAL-app = "pfsense:unbound"
FIELDALIAS-dest = dest_ip ASNEW dest
EXTRACT-incoming scrubbed message soa = info: incoming scrubbed packet: ;; ->>HEADER<<- opcode: (?P<opcode>\S+), rcode: (?P<rcode>\S+), id: (?P<id>\d+) ;; flags: (?P<flags>.*); QUERY: (?P<query_count>\d+), ANSWER: (?P<answer_count>\d+), AUTHORITY: (?P<authority_answer_count>\d+), ADDITIONAL: (?P<additional_answer_count>\d+)  ;; QUESTION SECTION: (?P<question>\S+)\.\s+IN\s+(?P<question_type>\S+)  ;; ANSWER SECTION:.*;; AUTHORITY SECTION: (?P<authority>\S+)\.\s+(?P<answer_id>\d+)\s+IN\s+(SOA)\s+(?P<SOA>\S+)\. \S+\. (\d+) (\d+) (\d+) (\d+) (\d+) (\S+)\.\s+(\d+)\s+IN\s+(\S+)\s+SOA (\d+) (\d+) (\d+) (\d+) (\d+) (\d+)
EVAL-vendor_product = "netgate pfsense"
EVAL-message_type = if(LIKE(_raw,"%response for%"),"Response",if(LIKE(_raw,"%reply from%"),"Response",if(LIKE(_raw,"%validator operate%"),"Query",if(LIKE(_raw,"%resolving%"),"Query",if(LIKE(_raw,"%incoming scrubbed packet%"),"Response","Unknown")))))
EVAL-dest = coalesce(dest_ip,dest,"unknown")
EVAL-dest_port = coalesce(dest_port,dport,"unknown")
EVAL-reply_code = rcode
EXTRACT-incoming scrubbed message soa nxdomain = info: incoming scrubbed packet: ;; ->>HEADER<<- opcode: (?P<opcode>\S+), rcode: (?P<rcode>\S+), id: (?P<id>\d+) ;; flags: (?P<flags>.*); QUERY: (?P<query_count>\d+), ANSWER: (?P<answer_count>\d+), AUTHORITY: (?P<authority_answer_count>\d+), ADDITIONAL: (?P<additional_answer_count>\d+)  ;; QUESTION SECTION: (?P<question>\S+)\.\s+IN\s+(?P<question_type>\S+)  ;; ANSWER SECTION:.*;; AUTHORITY SECTION:.*\.\s+\d+\s+IN\s+SOA\s+(?P<SOA>\S+)\. \S+\. (\d+) (\d+) (\d+) (\d+) (\d+) \.\s+\d+\s+IN\s+\S+\s+\S+\s+\d+\s+\d+\s+\d+\s+\d+\s+\d+\s+\d+
EXTRACT-user action = openvpn \d+ - - user '(?P<user>\S+)' (?P<action>\S+)

[pfsense:snort]
EXTRACT-pfsense:snort = snort\s+(\d+)\s+\-\s+\-\s+\[(?P<signature>\S+)\]\s+(?P<message>.*)\s+\[\S+\:\s+(?P<classification>.*)\]\s+\[\S+\:\s+(?P<priority>\d+)\]\s+\{(?P<transport>.*)\}\s+(?P<src_ip>\d+\.\d+.\d+.\d+)\:(?P<src_port>\d+)\s+\-\>\s+(?P<dest_ip>\d+\.\d+\.\d+\.\d+)\:(?P<dest_port>\d+)
EVAL-vendor_product = "netgate pfsense"
EVAL-dest = coalesce(dest_ip,"Unknown")
EVAL-src = coalesce(src_ip,src,"Unknown")
EVAL-action = coalesce(action,"Unknown")
EVAL-user = coalesce(user,"Unknown")
EVAL-file_name = coalesce(file_name,"Unknown")
EVAL-file_path = coalesce(file_path,"Unknown")
EVAL-severity = coalesce(priority,"Unknown")
EVAL-category = coalesce(classification,category,"Unknown")
EVAL-file_hash = coalesce(file_hash,"Unknown")
EVAL-dvc = coalesce(dvc,"Unknown")

[pfsense:php]
EXTRACT-pfsense:php = php\s+\d+\s+\-\s+\-\s+(?P<action>.*)

[pfsense:syslogd]
EXTRACT-pfsense:syslogd = syslogd\s+\-\s+\-\s+\-\s+(?P<action>\S+)

[pfsense:filterdns]
EXTRACT-pfsense:filterdns = filterdns\s+\d+\s+\-\s+\-\s+(?P<action>.*)

[pfsense:/usr/sbin/cron]
EXTRACT-pfsense:/usr/sbin/cron = \/usr\/sbin\/cron\s+\d+\s+\-\s+\-\s+(?P<action>.*)

[pfsese:unbound]
EXTRACT-incoming scrubbed packet = info: incoming scrubbed packet: ;; ->>HEADER<<- opcode: (?P<opcode>\S+), rcode: (?P<rcode>\S+), id: (?P<id>\d+) ;; flags: (?P<flags>.*); QUERY: (?P<query_count>\d+), ANSWER: (?P<answer_count>\d+), AUTHORITY: (?P<authority_answer_count>\d+), ADDITIONAL: (?P<additional_answer_count>\d+)  ;; QUESTION SECTION: (?P<question>\S+)\.\s+IN\s+(?P<question_type>\S+)  ;; ANSWER SECTION: (?P<answer>\S+)\.\s+(?P<answer_id>\d+)\s+IN\s+(?P<answer_type>\S+)\s+(?P<dest>\S+)  ;; AUTHORITY SECTION:.*;; ADDITIONAL SECTION: ;; MSG SIZE.*rcvd: (?P<recieved>\d+)
